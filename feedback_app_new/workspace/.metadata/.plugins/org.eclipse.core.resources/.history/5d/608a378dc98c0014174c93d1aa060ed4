package org.domain;

import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

@Entity
@Table(name="user")
public class User {
	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	@Column(name="user_id")
	private Integer userId;	
	@Column(name="first_name")
	private String firstName;
	@Column(name="last_name")
	private String lastName;
	@Column(name="gender")
	private String gender;
	@Column(name="employee_id")
	private String employeeId;
	@Column(name="photo")
	private String photo;
	@Column(name="phone_number")
	private Long phoneNumber;
	@Column(name="email_address")
	private String emailAddress;
	@Column(name="password")
	private String password;
	
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="role",referencedColumnName="role_id")
	private Role role;
	
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="employee_group",referencedColumnName="group_id")
	private EmployeeGroup group;
	
	private float experience;
	private String skillset;
	private float ctc;
	@JoinColumn(name="approver",nullable=true)
	@ManyToOne(fetch=FetchType.LAZY)
	private User approver;
	@Column(name="approver_type")
	private byte approverType;
	
	
	@ManyToMany
	@JoinTable(
	      name="user_manager",
	      joinColumns={@JoinColumn(name="user_id", referencedColumnName="user_id")},
	      inverseJoinColumns={@JoinColumn(name="manager_id", referencedColumnName="user_id")}
	  )
	private List<User> managers;
	/*private Date nextFeedbackDate;*/
	@Column(name="feedBack_frequency_type")
	private byte feedBackFrequencyType;
	/*private Date nextAppraisalDate;*/
	@Column(name="appraisal_frequency_type")
	private byte appraisalFrequencyType;
	@Column(name="last_hike_percentage")
	private float lastHikePercentage;
	@Column(name="feedBack_frequency")
	private Integer feedBackFrequency;
	@Column(name="appraisal_frequency")
	private Integer appraisalFrequency;
	/*private Date joiningDate;*/
	public Integer getUserId() {
		return userId;
	}
	public void setUserId(Integer userId) {
		this.userId = userId;
	}
	public String getFirstName() {
		return firstName;
	}
	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}
	public String getLastName() {
		return lastName;
	}
	public void setLastName(String lastName) {
		this.lastName = lastName;
	}
	public String getGender() {
		return gender;
	}
	public void setGender(String gender) {
		this.gender = gender;
	}
	public String getEmployeeId() {
		return employeeId;
	}
	public void setEmployeeId(String employeeId) {
		this.employeeId = employeeId;
	}
	public String getPhoto() {
		return photo;
	}
	public void setPhoto(String photo) {
		this.photo = photo;
	}
	public Long getPhoneNumber() {
		return phoneNumber;
	}
	public void setPhoneNumber(Long phoneNumber) {
		this.phoneNumber = phoneNumber;
	}
	public String getEmailAddress() {
		return emailAddress;
	}
	public void setEmailAddress(String emailAddress) {
		this.emailAddress = emailAddress;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	public Role getRole() {
		return role;
	}
	public void setRole(Role role) {
		this.role = role;
	}
	public EmployeeGroup getGroup() {
		return group;
	}
	public void setGroup(EmployeeGroup group) {
		this.group = group;
	}
	public float getExperience() {
		return experience;
	}
	public void setExperience(float experience) {
		this.experience = experience;
	}
	public String getSkillset() {
		return skillset;
	}
	public void setSkillset(String skillset) {
		this.skillset = skillset;
	}
	public float getCtc() {
		return ctc;
	}
	public void setCtc(float ctc) {
		this.ctc = ctc;
	}

	public byte getApproverType() {
		return approverType;
	}
	public void setApproverType(byte approverType) {
		this.approverType = approverType;
	}

/*	public Date getNextFeedbackDate() {
		return nextFeedbackDate;
	}
	public void setNextFeedbackDate(Date nextFeedbackDate) {
		this.nextFeedbackDate = nextFeedbackDate;
	}*/
	public byte getFeedBackFrequencyType() {
		return feedBackFrequencyType;
	}
	public void setFeedBackFrequencyType(byte feedBackFrequencyType) {
		this.feedBackFrequencyType = feedBackFrequencyType;
	}
/*	public Date getNextAppraisalDate() {
		return nextAppraisalDate;
	}
	public void setNextAppraisalDate(Date nextAppraisalDate) {
		this.nextAppraisalDate = nextAppraisalDate;
	}*/
	public byte getAppraisalFrequencyType() {
		return appraisalFrequencyType;
	}
	public void setAppraisalFrequencyType(byte appraisalFrequencyType) {
		this.appraisalFrequencyType = appraisalFrequencyType;
	}
	public float getLastHikePercentage() {
		return lastHikePercentage;
	}
	public void setLastHikePercentage(float lastHikePercentage) {
		this.lastHikePercentage = lastHikePercentage;
	}
	public Integer getFeedBackFrequency() {
		return feedBackFrequency;
	}
	public void setFeedBackFrequency(Integer feedBackFrequency) {
		this.feedBackFrequency = feedBackFrequency;
	}
	public Integer getAppraisalFrequency() {
		return appraisalFrequency;
	}
	public void setAppraisalFrequency(Integer appraisalFrequency) {
		this.appraisalFrequency = appraisalFrequency;
	}
/*	public Date getJoiningDate() {
		return joiningDate;
	}
	public void setJoiningDate(Date joiningDate) {
		this.joiningDate = joiningDate;
	}*/
	public User getApprover() {
		return approver;
	}
	public void setApprover(User approver) {
		this.approver = approver;
	}
	public List<User> getManagers() {
		return managers;
	}
	public void setManagers(List<User> managers) {
		this.managers = managers;
	}
	@Override
	public String toString() {
		return "User [userId=" + userId + ", firstName=" + firstName
				+ ", lastName=" + lastName + ", gender=" + gender
				+ ", employeeId=" + employeeId + ", photo=" + photo
				+ ", phoneNumber=" + phoneNumber + ", emailAddress="
				+ emailAddress + ", password=" + password + ", role=" + role
				+ ", group=" + group + ", experience=" + experience
				+ ", skillset=" + skillset + ", ctc=" + ctc + ", approver="
				+ approver + ", approverType=" + approverType + ", managers="
				+ managers + ", feedBackFrequencyType=" + feedBackFrequencyType
				+ ", appraisalFrequencyType=" + appraisalFrequencyType
				+ ", lastHikePercentage=" + lastHikePercentage
				+ ", feedBackFrequency=" + feedBackFrequency
				+ ", appraisalFrequency=" + appraisalFrequency + "]";
	}
	
}
